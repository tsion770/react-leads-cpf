{"version":3,"sources":["utils.js","Components/LeadsForm.js","App.js","reportWebVitals.js","index.js"],"names":["addNewLead","url","obj","a","axios","post","resp","data","useStyles","makeStyles","theme","root","margin","spacing","width","LeadsForm","props","classes","style","textAlign","marginTop","className","initialValues","prenom","nom","numeroDeTelephone","email","formation","validate","values","errors","length","onSubmit","setSubmitting","utils","alert","isSubmitting","TextField","id","name","label","component","type","marginLeft","value","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69018fab.chunk.js","sourcesContent":["import axios from 'axios'\r\n// const URL = \"http://localhost:8001/formation-cpf/\"\r\n\r\nconst addNewLead = async (url, obj) => {\r\n    let resp = await axios.post(url, obj)\r\n    return resp.data;\r\n};\r\n\r\nexport default {addNewLead};","import React from 'react'\r\nimport utils from '../utils'\r\nimport '../Components_Css/leadsForm.css'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n        },\r\n}));\r\n\r\n    \r\n\r\nconst LeadsForm = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n    <div >\r\n        <h2 style={{textAlign:\"center\", marginTop:\"30px\"}}> Saisir votre droit a la formation </h2>\r\n        <div className=\"formStructure\">\r\n        <Formik initialValues={{ prenom: '', nom: '', numeroDeTelephone: '', email: '', formation: '' }}\r\n            validate={values => {\r\n                const errors = {};\r\n\r\n                if (!values.prenom) {\r\n                errors.prenom = 'Obligatoire';\r\n                } else if(values.prenom.length<3){\r\n                    errors.prenom = 'veuillez saisir votre Prenom'\r\n                }\r\n\r\n                if (!values.nom) {\r\n                    errors.nom = 'Obligatoire';\r\n                } else if(values.nom.length<3){\r\n                    errors.nom = 'veuillez saisir votre Nom de Famille'\r\n                }\r\n\r\n                if (!values.numeroDeTelephone) {\r\n                    errors.numeroDeTelephone = 'Obligatoire';\r\n                    } else if(values.numeroDeTelephone.length<10){\r\n                        errors.numeroDeTelephone = 'votre numero de telephone doit contenir 10 numeros'\r\n                    }\r\n\r\n                    if (!values.email) {\r\n                        errors.email = 'Obligatoire';\r\n                    }\r\n\r\n                    if (!values.formation) {\r\n                        errors.formation = 'Obligatoire';\r\n                    }\r\n\r\n                return errors;\r\n            }}\r\n\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n\r\n                    let resp = await utils.addNewLead(\"http://localhost:8001/formation-cpf/\", values)\r\n                    alert(\"Votre inscription a bien etait envoyer!\")\r\n            }}\r\n        >\r\n            {({ isSubmitting }) => (\r\n        <Form className=\"form\" className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                {/* <TextField id=\"standard-basic\" label=\"Prenom\" /> */}\r\n            {/* <label htmlFor=\"prenom\" className=\"label\"> Votre Prenom </label> <br/> */}\r\n            <TextField id=\"standard-basic\" name=\"prenom\" className=\"input\" label=\"Prenom\"/>\r\n            <ErrorMessage name=\"prenom\" component=\"div\" className=\"error\"/>\r\n\r\n            {/* <label htmlFor=\"nom\" className=\"label\"> Votre Nom de Famille </label><br/> */}\r\n            <TextField type=\"text\" name=\"nom\" className=\"input\" label=\"Nom\"/>\r\n            <ErrorMessage name=\"nom\" component=\"div\" className=\"error\"/> <br/><br/>\r\n\r\n            {/* <label htmlFor=\"numeroDeTelephone\" className=\"label\"> Votre Numero de Telephone </label><br/> */}\r\n            <TextField type=\"text\" name=\"numeroDeTelephone\" className=\"input\" label=\"Numero de Telephone\"/>\r\n            <ErrorMessage name=\"numeroDeTelephone\" component=\"div\" className=\"error\"/> \r\n\r\n            {/* <label htmlFor=\"posteActuelle\" className=\"label\"> Email </label><br/> */}\r\n            <TextField type=\"text\" name=\"email\" className=\"input\" label=\"E-mail\"/>\r\n            <ErrorMessage name=\"email\" component=\"div\" className=\"error\"/> <br/><br/>\r\n\r\n            {/* <label htmlFor=\"formation\" className=\"label\"> Quelle formation pourrait eventuellement vous interesser? </label><br/> */}\r\n            <TextField type=\"text\" name=\"formation\" className=\"input\" label=\"Choix de Formation\"/>\r\n            <ErrorMessage name=\"formation\" component=\"div\" className=\"error\"/> <br/> <br/><br/>\r\n\r\n            <input type=\"submit\" style={{marginLeft:\"23%\"}} value=\"Register\" disabled={isSubmitting} className=\"submitButton\" /><br/>\r\n\r\n        </Form>\r\n        )}\r\n        </Formik>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default LeadsForm;","import LeadsForm from './Components/LeadsForm'\n\nfunction App() {\n  return (\n    <div>\n<LeadsForm/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}